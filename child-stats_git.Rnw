%-------------------------------------
<<parent1, echo=FALSE, cache=FALSE>>=
#knitr::opts_chunk$set(comment=NA)
knitr::opts_chunk$set(comment=NA)
rm(list=ls())
set.seed(132435)
set_parent('./parent05.Rnw')
@


<<stats1, echo=FALSE, error=FALSE, message=FALSE, results='asis', warning=FALSE, cache=FALSE, outodep=TRUE>>=
# >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
#PREAMBLE: Several packages
#Here we are loading all the necessary libraries, chicking that we are on the correct OS
# Load necessary libraries:
# library(reshape)
# First three packages used to be in first chunk...
library(knitr)
library(tidyverse)
library(plm)       # Panel data analysis library
library(reshape2)
library(lme4)
library(Matrix)
library(plyr)
library(ggplot2)
library(xtable)
library(tidyverse)
library(plm)
library(stargazer)
# library(doBy)
#==============================

#==============================================
#Set up working directory: +++ MAKE SURE THE CORRECT DIRECTORY IS BEING USED ***
setwd('C:/Users/vera/Documents/Uni/2 Master EOEP/5. Masterarbeit/03_Dokument')
cur.wd = getwd()
#==============================================
@



<<mystats, echo=FALSE, error=FALSE, message=FALSE, results='asis', warning=FALSE, cache=FALSE, outodep=TRUE>>=
class.size <- 30 # number of students in each class
student.id <- seq(1:class.size)
class.id <- seq(1:2)

wave <- seq(1:2) - 1
wavea <- seq(1:5) - 1

d <- expand.grid(wave = wave, student.id = student.id, class.id = class.id)

da <- expand.grid(wavea = wavea, student.id = student.id, class.id = class.id)

rm(wavea, wave, class.id, student.id)

#---------------------------------

d$treated <- ifelse( d$class.id==1, 1, 0)
df <- unique(d[c("student.id", "class.id")])
df <- df %>% mutate(ustudent.id = 1:60) %>% select(ustudent.id, everything()) # Why does n() not work??
df$student.effect <- rnorm(nrow(df), mean=0, sd=1)
d <- left_join(d, df, by=c("class.id", "student.id"))
# head(d)



da$treated <- ifelse( da$class.id==1, 1, 0)
dfa <- unique(da[c("student.id", "class.id")])
dfa <- dfa %>% mutate(ustudent.id = 1:60) %>% select(ustudent.id, everything()) # Why does n() not work??
dfa$student.effect <- rnorm(nrow(dfa), mean=0, sd=1)
da <- left_join(da, dfa, by=c("class.id", "student.id"))
# head(d)

#-------------------------------------
### The outcomes are determined by the following data generating process ###

teffect <- 1 # treatment effect
wave.effects <- -1 # wave effects
class.effect <- 3
cons <- 0
d$y <- cons + class.effect*d$treated + 
              wave.effects*d$wave + 
              teffect*(d$treated*d$wave) +
              d$student.effect +
              rnorm(nrow(d), mean=0, sd=1)

teffect <- 1 # treatment effect
wave.effects <- -1 # wave effects
class.effect <- 2
cons <- 0
da$y <- cons + class.effect*da$treated + 
              wave.effects*da$wave + 
              teffect*(da$treated*da$wave) +
              da$student.effect +
              rnorm(nrow(da), mean=0, sd=1)

#-------------------------------
### DD ###

y00 <- mean( d$y[(d$treated==0 & d$wave==0)] )
y10 <- mean( d$y[(d$treated==1 & d$wave==0)] )
y01 <- mean( d$y[(d$treated==0 & d$wave==1)] )
y11 <- mean( d$y[(d$treated==1 & d$wave==1)] )
(y11 - y10) - (y01- y00)

y00a <- mean( da$y[(da$treated==0 & da$wave==0)] )
y10a <- mean( da$y[(da$treated==1 & da$wave==0)] )
y01a <- mean( da$y[(da$treated==0 & da$wave==1)] )
y11a <- mean( da$y[(da$treated==1 & da$wave==1)] )
(y11a - y10a) - (y01a- y00a)

#----------------------------------------
### DD regression ###

## OLS ##

ols <- lm( y ~ treated + wave + treated*wave, data = d)
# summary(ols)
stargazer(ols)

olsa <- lm( y ~ treated + wavea + treated*wavea, data = da)
# summary(olsa)
stargazer(olsa)

## Student fixed effects DD regression ##

d.p <- pdata.frame(d, index = c("ustudent.id", "wave"))
da.p <- pdata.frame(da, index = c("ustudent.id", "wavea"))

fe <- plm( y ~ wave + treated*wave, data = d.p, model = "within")
fea <- plm( y ~ wavea + treated*wavea, data = da.p, model = "within")
# summary(fe)
# stargazer(fe)

## Random effects DD regression ##

re <- plm( y ~ treated + wave + treated*wave, data = d.p, model = "within", no.space=TRUE)
rea <- plm( y ~ treated + wavea + treated*wavea, data = da.p, model = "within", no.space=TRUE)
# summary(re)
# stargazer(re)

stargazer(ols, fe, re, single.row = T, column.sep.width = "-10pt")

stargazer(olsa, fea, rea, single.row = T, column.sep.width = "-10pt")

## Original computing environment ##

# devtools::session_info()

@

